.. _clamp:

clamp
*****


**Syntax:** :code:`clamp(image, lower bound, upper bound)`

Ensures that all pixel values are in the given range by replacing values less than the lower bound or greater than the larger bound by the bound value.

This command can be used in the distributed processing mode. Use :ref:`distribute` command to change processing mode from local to distributed.

Arguments
---------

image [input & output]
~~~~~~~~~~~~~~~~~~~~~~

**Data type:** uint8 image, uint16 image, uint32 image, uint64 image, int8 image, int16 image, int32 image, int64 image, float32 image

Image to process.

lower bound [input]
~~~~~~~~~~~~~~~~~~~

**Data type:** real

Lower bound.

upper bound [input]
~~~~~~~~~~~~~~~~~~~

**Data type:** real

Upper bound.

